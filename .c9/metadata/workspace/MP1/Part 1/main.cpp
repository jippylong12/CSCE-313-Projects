{"changed":false,"filter":false,"title":"main.cpp","tooltip":"/MP1/Part 1/main.cpp","value":"#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <ctype.h>\n#include <unistd.h>\n#include \"linked_list.h\"\n#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char ** argv) \n{\n\tint c,b, M;\n\tb=128;\n\tM=512000;\n\twhile ((c = getopt (argc,argv,\"b:s:\")) != -1)\n\t{\n\t\tswitch(c)\n\t\t{\n\t\t\tcase 'b':\n\t\t\t\tb = atoi(optarg);\n\t\t\t\tif(b==0){\n\t\t\t\t\tb=128;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\tM = atoi(optarg);\n\t\t\t\tif(M==0){\n\t\t\t\t\tM=51200;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '?':\n\t\t\t\t if (optopt == 'c')\n\t\t\t\t\tfprintf (stderr, \"Option -%c requires an argument.\\n\", optopt);\n\t\t\t\telse if (isprint (optopt))\n\t\t\t\t\tfprintf (stderr, \"Unknown option `-%c'.\\n\", optopt);\n\t\t\t\telse\n\t\t\t\t\tfprintf (stderr, \"Unknown option character `\\\\x%x'.\\n\", optopt);\n\t\t\t\treturn 1;\n\t\t\tdefault:\n\t\t\t\tabort();\n\t\t\t\t\n\t\t}\n\t}\n\tchar buf [1024];\n\tmemset (buf, 1, 1024);\t\t// set each byte to 1\n\t\n\tconst char * msg = \"a sample message\";\n\tLinked_list list;\n\tlist.Init (M,b); // initialize\n\t// test operations\n \tint testnums [] = {100, 5, 200, 7, 39, 25, 400, 50, 200, 300};\n\tint i = 0;\n\t// some sample insertions\n\tfor (i=0; i< 10; i ++)\n\t{\n\t\tlist.Insert (testnums [i], buf, 50);   // insert 50 bytes from the buffer as value for each of the insertions\n\t}\n\tlist.PrintList();\n\tcout<<endl<<endl;\n\tlist.Delete(200);\n\tlist.Delete(39);\n\tlist.Delete(50);\n\tlist.Delete(300);\n\tlist.PrintList();\n\tlist.Insert (150, buf, 200); // this Insert should fail\n\tlist.PrintList ();\n\tlist.Delete (7);\n\tlist.Insert (13, msg, strlen(msg)+1);\t\t// insertion of strings, copies the null byte at the end\n\tlist.Delete (55);\n\tlist.Insert (15, \"test msg\", 8);\n\tlist.Delete (3);\n\tlist.PrintList ();\n\t\n\t// a sample lookup operations that should return null, because it is looking up a non-existent number\n\tchar* kv = list.Lookup (3);\n\tif (kv)\n\t \tprintf (\"Key = %d, Value Len = %d\\n\", *(int *) kv, *(int *) (kv+4));\n\n\t// this look up  should succeed and print the string \"a sample message\"\n\tkv = list.Lookup (13);\n\tif (kv)\n\t\tprintf (\"Key = %d, Value Len = %d, Value = %s\\n\", *(int *) kv, *(int *) (kv+4), kv + 8);\n\t// end test operations\t\n\tlist.Destroy (); \n\t\n}\n","undoManager":{"mark":-1,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":56,"column":43},"end":{"row":56,"column":43},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1443197099000}